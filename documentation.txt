#########################
# PIZZAPY DOCUMENTATION #
#########################


==========================
Technical Analysis
==========================

How to determine a WEAK stock by technical analysis? 
    I can use technical_one table to compare stocks, since technical_one has just one day data for each stock, it is much easier to load.
    
    First, use steepness to sort stocks, the steepness less than 1.0 is considered week. while 0.95 or 0.96 is very weak.
    
    Second, simply use RSI to read their recent price action, choose some higher numbers. if the RSI is higher recently, that means they have rebounded.

    Third, go to stockcharts.com to view visual technical graphs.

    ma50 is just a price point, while steep50 use much further closing prices to determine the slope of the moving average line.


==========================
GURU
==========================

How to determine a WEAK stock by GURU analysis? 

    High interest stocks:
        AAL CZR F UAL CCL OGN AES PARA NCLH WBD CHTR WYNN RCL T NRG EIX PCG BXP DXC WRK RJF VTRS CE PRU WHR SEE BBWI GEN FE ETR DVA D AXP KMI AEP KMX EXC EVRG NI MGM DAL DUK SWK ES CMS DTE PPL PNW CNP IP VZ ED IRM CAG SO TRGP XEL VTR VFC LNT WBA

    Low Altman Z-score: preferably less than 1
        Z-scores can be negative.
        VRSN FIS NCLH STX CCL WBD SBAC PCG T PEAK MTCH AES NI CME VTR D DUK CZR DXC RCL EIX EVRG CCI BXP EXC ICE FE LCID CHTR


    Low increase50 stocks
        increase50 ceiling: 0.16, decrease50 ceiling: -0.2
        AIRC VZ UDR VFC DOC D EQR CPT MAA Q G ECL FR MMM ARE BALL WMT ICE TRMB CHH AVB LKQ WHR TROW TSN CLX AMT BAX PEAK ILMN CTSH FFIV EBAY EGP ESS WH EW RVTY

    I can select stocks with high interest payments (2023 OCT):
        AAL - American Airlines, 25%,  8 B
        CZR - Caesars Entertainment, 23%,  10 B
        F - Ford Motor Company 14%, 48 B 
        UAL - United Airlines Holdings, 13% of 13 B
        CCL - Carnival Corporation & plc, 12% of 15 B (LOSS, Z 0.33)
        OGN - Organon & Co., 11% of 4.2 B
        AES - The AES Corporation, 11.4 % of 10.6 B   (Power generation and utility)
        PARA - Paramount Global 11% of 8.3 B      (Media)
        NCLH - 
        WBD - Warner Bros Discovery Inc, 8.4% of 26.9 B (LOSS, Z 0.34)



    Banks stocks to be excluded: 
        C 
        GS
        BK: The Bank of New York Mellon
        KEY: KeyCorp (KeyBank National Association)
        COF: Capital One Financial (Capital One Bank)
        BAC: Bank of America
        NTRS: Northern Trust Corporation (financial services)
        MS
        CFG: Citizens Financial Group
        SYF: Synchrony Financial
        STT: State Street Corporation
        TFC: Truist Financial Corporation
        CMA: Comerica Incorporated (financial services)
        USB: U.S. Bancorp
        ZION: Zions Bancorporation
        DFS: Discover Financial Services
        HBAN: Huntington Bancshares
        FITB: Fifth Third Bancorp
        WFC: Wells Fargo & Company
        PNF: The PNC Financial Services
        JPM



SECTION: CURRENT WORK
---------------------





SECTION: FOLDER STRUCTURE AND IMPORT
------------------------------------
    This program has a 2-layer folder structure. The parent folder 'pizzapy' has the following files
        .gitignore
        __init__.py             
        main.py
        main_script.py
        requirements.txt
        documentation.txt


SECTION: CUSTOM LIBRARIES
--------------------------
    I have custom libraries like batterypy and dimsumpy, in order to use them, they must be at sys.path, so that python programs can import them. site-packages folder is in sys.path (search path), so I must put the custom libraries into site-packages, or create symlinks in site-packages to point to the custom libraries.

    Sometimes, if I need to use modules in the same program, I need to append parent program folder to the sys.path.

        

    I better keep this program to only 2-layer folder structure to simplify the imports.

    Install custom libraries in virtual environment's site-packages folder:

        step 1: go to site-packages folder
        /Users/chris/github/pizzapy/venv/lib/python3.11/site-packages

        step 2: create symlinks
        ln -s ~/github/batterypy batterypy
        ln -s ~/github/dimsumpy dimsumpy



SECTION: IMPORT
------------------
    pasta/
        main.py
        test.py
        subfolder1/
            |-- module1.py
        subfolder2/
            |-- module2a.py
            |-- module2b.py

    Inside subfolder's modules like module1.py, I should not use relative imports because relative imports work only when I call them from program folder main.py or test.py, instead I should have the following sys.path line at the top of subfolders' modules, so that I could use if __name__ == '__main__': to test functions of that module

        

    In main.py and test.py, I do not need to have above sys.path line.

    In order for main.py or terminal scripts to import sub folder modules, 
    the following must be satisfied:
        (1) each module in a subfolder must have sys.path.append('..')

        (2) each module in a subfolder must have full path import even for same folder module, see database_update/postgres_execution_model.py



SECTION: requirements.txt
---------------------------
    Working requirements.txt
        python3 version 3.11
        beautifulsoup4~=4.0
        lxml~=4.0
        pandas~=2.0.0        
        PySide6~=6.5.0
        requests~=2.0
    
    Q: Can I use python 3.12?
        I tried 3.12 but some of the libraries in requirements cannot be installed.

    VIRTUAL ENVIRONMENT:
        # will install: pip, setuptools
        # command to create virtual environment: 
        # alias pv='python3 -m venv venv && source venv/bin/activate && pip3 install --upgrade pip && which python3 && python3 -V &&  pip3 -V &&  pip3 list'
        # /Users/chris/github/pizzapy/venv/lib/python3.11/site-packages


    beautifulsoup4
        # beautifulsoup4==4.12
        # will install: beautifulsoup4, soupsieve
        # version 4.12.2 in 2023 AUG; 4 is the major version, 12 is the minor version, 2 is the patch version, it should be compatible for minor version updates like 4.13, 4.14
        # https://pypi.org/project/beautifulsoup4/
        # DOCS: https://www.crummy.com/software/BeautifulSoup/bs4/doc/
        # the BeautifulSoup (ver3) package is the old libray


    black
        # black
        # will install black(program)
        # version 23.7 in 2023 SEP
        # This program can pretty format database_update/generated_stock_list.py

    html5lib
        # html5lib
        # no need to specify version
        # html5lib library is required by pandas.read_html() when the HTML page does not have <table> tag.


    lxml
        # lxml
        # I cannot specify minor version of 4.9 in Apple Silicon, if I specify the version, it cannot be installed despite I input a valid version in Apple Silicon.
        # will install: lxml
        # pandas requires lxml to parse HTML documents, when I install pandas, pandas will not automatically install lxml.
        # NOTE: I have successufully installed lxml on mac mini m1 by just put 'lxml' without version in requirements.txt, and it installed 4.9.3; before I installed lxml by pip, I edit /etc/paths and put /opt/homebrew/opt/llvm/bin/ at the top, so it use homebrew clang compiler. In addition, before I pip install lxml, I also use brew to install libxml2, but I am not sure whether libxml2 helps pip install lxml.
    
    more-itertools

        # pip install more-itertools
        # will install more-itertools
        # DOCS: https://more-itertools.readthedocs.io/en/stable
        # NOTE: 'chunked' is frequently used. 
        from more_itertools import chunked, sliced
        list(chunked(my_collection, 3))
        list(sliceded(my_collection, 3))

    pandas
        # pandas==2.0
        # will install: pandas, numpy, python-dateutil, pytz, six, tzdata
        # version 2.0.3 in 2023 AUG
        # https://pypi.org/project/pandas/
        # DOCS: https://pandas.pydata.org/docs/

    psycopg[binary, pool]
        # psycopg[binary, pool]   
        # if I sepecify the version, it cannot be installed
        # will install: psycopg, psycopg-binary, psycopg-pool, typing_extensions
        # DO NOT directly put psycopg, psycopg-binary, psycopg-pool into requirements.txt, that might not install properly.
        # version 3.1.10 for binary and 3.1.7 for pool in 2023 AUG
        # after I install psycopg[binary, pool], 'psycopg', 'psycopg-binary' and 'psycopg-pool' were installed
        # https://pypi.org/project/psycopg-binary/
        # DOCS: https://www.psycopg.org/psycopg3/docs/

    psycopg2-binary
        # psycopg2-binary
        # no need to specify the version, as it will installed the latest version 2.
        # This psycopg2-binary library is a prerequisite of SQLAlchemy ver 2, even in 2023.
        # Intel Mac can use either psycopg2 or psycopg2-binary.
        # Apple Silicon Mac can ONLY use psycopy2-binary. Installing psycopg2 will be failed on Apple Silicon.


    PySide6
        # PySide6==6.5
        # will install: PySide6, PySide6-Addons, PySide6-Essentials, shiboken6
        # version 6.5.2 in 2023 AUG
        # https://pypi.org/project/PySide6/
        # DOCS: https://doc.qt.io/qtforpython-6/
        # homepgae: https://wiki.qt.io/Qt_for_Python


    requests
        # requests==2.31
        # will install: requests, certifi, charset-normalizer, idna, urllib3
        # version 2.31.0 in 2023 AUG
        # https://pypi.org/project/requests/
        # DOCS: https://requests.readthedocs.io/en/latest/

    SQLalchemy
        # SQLAlchemy
        # no need to specify the version, it will install version 2.0.XX in 2023.
        # will install: SQLAlchemy, greenlet
        # Success install in Intel and Apple Silicon mac, the challenge is the prerequite psycopg2 library.
        # Intel Mac can use either psycopg2 or psycopg2-binary as a prerequisite in requirements.txt
        # While Apple Silicon Mac can ONLY use psycopy2-binary. Installing psycopg2 will be failed on Apple Silicon.
        # pandas.read_sql() function works best with SQLalchemy connection, if I use psycopg 3 connection, the terminal will have warnings.
        # SQLAlchemy v2.0 still depends on psycopg2 library in 2023.
        # DOCS: https://docs.sqlalchemy.org/en/20/
        # https://docs.sqlalchemy.org/en/20/core/connections.html#sqlalchemy.engine.Connection
        



SECTION: TIMER
------------------
    I can use timeit package from the Standard Library to record the execution time in seconds:

    from timeit import default_timer

    if __name__ == '__main__':
        start: float = default_timer()
        print("Run some IO operations")
        print('Elapsed time in seconds:', default_timer() - start)









==========================
PACKAGE: guru_stock_update
==========================

[ general_model.py ]
    * INDEPENDENT *

    EXPORTS: make_price_cap_proxy()

    This module DOES NOT depend on other program modules. It provides make_price_cap_proxy() to other modules to fetch current price and market cap.


[ guru_proxy_model.py ]
    DEPENDS ON: general_model.py

    EXPORTS: make_guru_proxy()

    guru_proxy_model.py module depends on general_model.py to get current stock price and market cap.

    This module get all data from gurufocus and calculate the wealth percentage. The proxy dictionary is for database upsert in guru_database_model.py module.

    process_guru() will return a proxy dictionary containing all GURU WEB core data.

    make_guru_proxy() is the most import function, which returns a proxy dictionary containing all GURU data and wealth_pc. 

    Try or not try? child functions such proxy_guru_book_value() does not use try block,
    similar child functions are used in the last chain function in guru_proxy_model.py,
    it is much faster to run 10 functions at the same time without nested try blocks.


[ guru_update_database_model.py ]
    DEPENDS ON: price_proxy_model.py

    Part of Model-View-Controller

    This module is for database upsert, it gets data from guru_proxy_model.py module.

    I use wealth_pc variable from make_guru_proxy() to determine whether I will do the upsert in guru_database_model.py module. 

[ guru_update_view.py ]
    DEPENDS ON: 

    Part of Model-View-Controller


[ guru_update_ctrl.py ]
    DEPENDS ON: 

    Part of Model-View-Controller



===========================
PACKAGE: zacks_stock_update
===========================

[ zacks_update_database_model.py ]
    DEPENDS ON: 

    Part of Model-View-Controller

[ zacks_update_view.py ]
    DEPENDS ON: 

    Part of Model-View-Controller


[ zacks_update_ctrl.py ]
    DEPENDS ON: 

    Part of Model-View-Controller


============================
PACKAGE: option_stock_update
============================

[ option_update_database_model.py ]
    DEPENDS ON: 

    Part of Model-View-Controller

[ option_update_view.py ]
    DEPENDS ON: 

    Part of Model-View-Controller


[ option_update_ctrl.py ]
    DEPENDS ON: 

    Part of Model-View-Controller



============================
PACKAGE: database_update
============================

[ postgres_command_model.py ]
    * INDEPENDENT *

    EXPORTS: guru_stock_create_table_command, zacks_stock_create_table_command, stock_option_create_table_command, stock_price_create_table_command, stock_technical_create_table_command, futures_option_create_table_command,  table_list_dict


[ postgres_connection_model.py ]
    * INDEPENDENT *

    EXPORTS: 
        make_psycopg_connection()
        make_psycopg_cursor() -> Cursor
        execute_psycopg_command(cmd: str) -> None

        make_sqlalchemy_engine() -> Engine
        execute_pandas_read(cmd: str) -> DataFrame

[ postgres_execution_model.py ]
    DEPENDS ON: postgres_command_model.py, postgres_connection_model.py 
