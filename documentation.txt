#########################
# PIZZAPY DOCUMENTATION #
#########################


CONTENTS





SECTION: STRUCTURE







SECTION: FOLDER STRUCTURE AND IMPORT
------------------------------------
This program has a 2-layer folder structure. The parent folder 'pizzapy' has the following files
    .gitignore
    __init__.py             
    main.py
    main_script.py
    requirements.txt
    documentation.txt


SECTION: CUSTOM LIBRARIES
--------------------------
I have custom libraries like batterypy and dimsumpy, in order to use them, they must be at sys.path, so that python programs can import them. site-packages folder is in sys.path (search path), so I must put the custom libraries into site-packages, or create symlinks in site-packages to point to the custom libraries.

Sometimes, if I need to use modules in the same program, I need to append parent program folder to the sys.path.

    import sys; sys.path.append('..')

SECTION: IMPORT
------------------
pasta/
    main.py
    test.py
    subfolder1/
        |-- module1.py
    subfolder2/
        |-- module2a.py
        |-- module2b.py

Inside subfolder's modules like module1.py, I should not use relative imports because relative imports work only when I call them from program folder main.py or test.py, instead I should have the following sys.path line at the top of subfolders' modules, so that I could use if __name__ == '__main__': to test functions of that module

    import sys; sys.path.append('..')

In main.py and test.py, I do not need to have above sys.path line.





